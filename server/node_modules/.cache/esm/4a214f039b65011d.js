let express,bodyParser,mongoose,cors,postRoutes,userRoutes;_9b6‍.w("express",[["default",["express"],function(v){express=v}]]);_9b6‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_9b6‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_9b6‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_9b6‍.w("./routes/posts",[["default",["postRoutes"],function(v){postRoutes=v}]]);_9b6‍.w("./routes/user",[["default",["userRoutes"],function(v){userRoutes=v}]]);





const app = express();
const PORT = process.env.PORT || 5000;

app.use(express.json());
app.use(express.json({ extended: false, limit: "50mb" }));
app.use(
  express.urlencoded({ limit: "50mb", extended: false, parameterLimit: 50000 })
);
app.use(cors());

app.use("/posts", postRoutes);
app.use("/user", userRoutes);

const CONNECTION_URL = process.env.CONNECTION_URL;

mongoose
  .connect(CONNECTION_URL, { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() =>
    app.listen(PORT, () =>
      console.log(`Server Running on Port: http://localhost:${PORT}`)
    )
  )
  .catch((error) => console.log(`${error} did not connect`));

mongoose.set("useFindAndModify", false);
